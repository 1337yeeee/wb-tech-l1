package main

import (
	"fmt"
	"strings"
)

// –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑
// (—Ç.–µ. —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤).
// –í—ã–≤–æ–¥: true, –µ—Å–ª–∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã, false, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π, —Ç.–µ. —Å–∏–º–≤–æ–ª—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö —Å—á–∏—Ç–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.
// –ù–∞–ø—Ä–∏–º–µ—Ä:
// 		"abcd" -> true,
// 		"abCdefAaf" -> false (–ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è a/A),
// 		"aabcd" -> false.
// –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∞–Ω–Ω—ã—Ö —É–¥–æ–±–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏—è.

// –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏—è —É–¥–æ–±–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ú–Ω–æ–∂–µ—Å—Ç–≤–æ, Set.
// """
// –ú–Ω–æ–∂–µ—Å—Ç–≤–æ (set) –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ - —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö,
// –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ,–Ω–µ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
// """
// –û—Ç —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –º—ã –º–æ–∂–µ–º —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã map:
// 		–ø–µ—Ä–µ–¥ –≤–ª–æ–∂–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–æ –ª–∏ –∏–∑ —Ä–∞–Ω–µ–µ.
// 		–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –±—ã–ª–∏ –≤ –∫–∞—Ä—Ç–µ, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è,
// 		—Ç–æ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
// –í Golang map —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–∞,
// –≥–¥–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–∏–º–≤–æ–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞ O(1), –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ –∑–∞ O(n).
// –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:
// 		–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å ‚Äì O(n), –≥–¥–µ n - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
//		–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å ‚Äì O(min(k, c)),
// 					–≥–¥–µ k ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ,
// 					c ‚Äì –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
// 		–°–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ map ‚Äì O(1)
// 		–°–ª–æ–∂–Ω–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –∏–∑ map ‚Äì O(1)

func HasAllUniqueChars(s string) bool {
	seen := make(map[rune]struct{})

	s = strings.ToLower(s)

	for _, r := range []rune(s) {
		if _, ok := seen[r]; ok {
			return false
		}
		seen[r] = struct{}{}
	}

	return true
}

func main() {
	testCases := []struct {
		input  string
		expect bool
	}{
		{"abcd", true},       // –°—Ç—Ä–æ–∫–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
		{"abCdefAaf", false}, // —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–≤—Ç–æ—Ä: a-A-a
		{"aabcd", false},     // —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–≤—Ç–æ—Ä: a-a
		{"", true},           // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
		{"a", true},          // —Å—Ç—Ä–æ–∫–∞ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
		{"Aa", false},        // —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–≤—Ç–æ—Ä A-a
		{"12345", true},      // —Ü–∏—Ñ—Ä—ã
		{"11234", false},     // —Ü–∏—Ñ—Ä—ã —Å –ø–æ–≤—Ç–æ—Ä–æ–º 1-1
		{"ü´†ü´®ü•∂", true},        // —ç–º–æ–¥–∑–∏, —é–Ω–∏–∫–æ–¥. –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞
		{"ü´†ü´®ü•∂ü´†", false},      // —ç–º–æ–¥–∑–∏, —é–Ω–∏–∫–æ–¥. —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Å–∏–º–≤–æ–ª: ü´†-ü´†
	}

	for _, test := range testCases {
		result := HasAllUniqueChars(test.input)
		fmt.Printf("–°—Ç—Ä–æ–∫–∞: %s\n–û–∂–∏–¥–∞–ª–æ—Å—å: %v\n–†–µ–∑—É–ª—å—Ç–∞—Ç: %v\n\n", test.input, test.expect, result)
	}
}

// –í—ã–≤–æ–¥:

// –°—Ç—Ä–æ–∫–∞: abcd
// –û–∂–∏–¥–∞–ª–æ—Å—å: true
// –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// –°—Ç—Ä–æ–∫–∞: abCdefAaf
// –û–∂–∏–¥–∞–ª–æ—Å—å: false
// –†–µ–∑—É–ª—å—Ç–∞—Ç: false

// –°—Ç—Ä–æ–∫–∞: aabcd
// –û–∂–∏–¥–∞–ª–æ—Å—å: false
// –†–µ–∑—É–ª—å—Ç–∞—Ç: false

// –°—Ç—Ä–æ–∫–∞:
// –û–∂–∏–¥–∞–ª–æ—Å—å: true
// –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// –°—Ç—Ä–æ–∫–∞: a
// –û–∂–∏–¥–∞–ª–æ—Å—å: true
// –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// –°—Ç—Ä–æ–∫–∞: Aa
// –û–∂–∏–¥–∞–ª–æ—Å—å: false
// –†–µ–∑—É–ª—å—Ç–∞—Ç: false

// –°—Ç—Ä–æ–∫–∞: 12345
// –û–∂–∏–¥–∞–ª–æ—Å—å: true
// –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// –°—Ç—Ä–æ–∫–∞: 11234
// –û–∂–∏–¥–∞–ª–æ—Å—å: false
// –†–µ–∑—É–ª—å—Ç–∞—Ç: false

// –°—Ç—Ä–æ–∫–∞: ü´†ü´®ü•∂
// –û–∂–∏–¥–∞–ª–æ—Å—å: true
// –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// –°—Ç—Ä–æ–∫–∞: ü´†ü´®ü•∂ü´†
// –û–∂–∏–¥–∞–ª–æ—Å—å: false
// –†–µ–∑—É–ª—å—Ç–∞—Ç: false
