package main

import (
	"fmt"
	"time"
)

// Реализовать собственную функцию sleep(duration) аналогично встроенной функции time.Sleep,
// которая приостанавливает выполнение текущей горутины.
// Важно: в отличии от настоящей time.Sleep, ваша функция должна именно блокировать выполнение
// (например, через таймер или цикл), а не просто вызывать time.Sleep :) — это упражнение.
// Можно использовать канал + горутину, или цикл на проверку времени (не лучший способ, но для обучения).

func sleep(duration time.Duration) {
	done := make(chan int)

	go func() {
		start := time.Now()
		for {
			if time.Since(start) >= duration {
				done <- 0
				return
			}
		}
	}()

	<-done
}

func main() {
	fmt.Println("Начало работы", time.Now())
	sleep(3 * time.Second)
	fmt.Println("Прошло 3 секунды", time.Now())
	// Начало работы 2025-07-21 23:24:00.089299 +0300 MSK m=+0.000097043
	//Прошло 3 секунды 2025-07-21 23:24:03.089711 +0300 MSK m=+3.000505126
}
